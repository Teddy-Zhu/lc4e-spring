<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcos.lc4e.core.database.dao.UserGroupsMapper" >
  <resultMap id="BaseResultMap" type="com.jcos.lc4e.core.database.model.UserGroups" >
    <id column="intUserGroupId" property="intusergroupid" jdbcType="INTEGER" />
    <result column="strUserGroupAbbr" property="strusergroupabbr" jdbcType="VARCHAR" />
    <result column="strUserGroupName" property="strusergroupname" jdbcType="VARCHAR" />
    <result column="intUserAuthorizationId" property="intuserauthorizationid" jdbcType="INTEGER" />
    <result column="intAuthorizationLevel" property="intauthorizationlevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    intUserGroupId, strUserGroupAbbr, strUserGroupName, intUserAuthorizationId, intAuthorizationLevel
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from l4_usergroups
    where intUserGroupId = #{intusergroupid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from l4_usergroups
    where intUserGroupId = #{intusergroupid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jcos.lc4e.core.database.model.UserGroups" >
    insert into l4_usergroups (intUserGroupId, strUserGroupAbbr, 
      strUserGroupName, intUserAuthorizationId, 
      intAuthorizationLevel)
    values (#{intusergroupid,jdbcType=INTEGER}, #{strusergroupabbr,jdbcType=VARCHAR}, 
      #{strusergroupname,jdbcType=VARCHAR}, #{intuserauthorizationid,jdbcType=INTEGER}, 
      #{intauthorizationlevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jcos.lc4e.core.database.model.UserGroups" >
    insert into l4_usergroups
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="intusergroupid != null" >
        intUserGroupId,
      </if>
      <if test="strusergroupabbr != null" >
        strUserGroupAbbr,
      </if>
      <if test="strusergroupname != null" >
        strUserGroupName,
      </if>
      <if test="intuserauthorizationid != null" >
        intUserAuthorizationId,
      </if>
      <if test="intauthorizationlevel != null" >
        intAuthorizationLevel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="intusergroupid != null" >
        #{intusergroupid,jdbcType=INTEGER},
      </if>
      <if test="strusergroupabbr != null" >
        #{strusergroupabbr,jdbcType=VARCHAR},
      </if>
      <if test="strusergroupname != null" >
        #{strusergroupname,jdbcType=VARCHAR},
      </if>
      <if test="intuserauthorizationid != null" >
        #{intuserauthorizationid,jdbcType=INTEGER},
      </if>
      <if test="intauthorizationlevel != null" >
        #{intauthorizationlevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcos.lc4e.core.database.model.UserGroups" >
    update l4_usergroups
    <set >
      <if test="strusergroupabbr != null" >
        strUserGroupAbbr = #{strusergroupabbr,jdbcType=VARCHAR},
      </if>
      <if test="strusergroupname != null" >
        strUserGroupName = #{strusergroupname,jdbcType=VARCHAR},
      </if>
      <if test="intuserauthorizationid != null" >
        intUserAuthorizationId = #{intuserauthorizationid,jdbcType=INTEGER},
      </if>
      <if test="intauthorizationlevel != null" >
        intAuthorizationLevel = #{intauthorizationlevel,jdbcType=INTEGER},
      </if>
    </set>
    where intUserGroupId = #{intusergroupid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcos.lc4e.core.database.model.UserGroups" >
    update l4_usergroups
    set strUserGroupAbbr = #{strusergroupabbr,jdbcType=VARCHAR},
      strUserGroupName = #{strusergroupname,jdbcType=VARCHAR},
      intUserAuthorizationId = #{intuserauthorizationid,jdbcType=INTEGER},
      intAuthorizationLevel = #{intauthorizationlevel,jdbcType=INTEGER}
    where intUserGroupId = #{intusergroupid,jdbcType=INTEGER}
  </update>
</mapper>