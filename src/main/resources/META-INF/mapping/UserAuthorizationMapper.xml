<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcos.lc4e.core.database.dao.UserAuthorizationMapper" >
  <resultMap id="BaseResultMap" type="com.jcos.lc4e.core.database.model.UserAuthorization" >
    <id column="intId" property="intid" jdbcType="INTEGER" />
    <result column="intUserAuthorizationId" property="intuserauthorizationid" jdbcType="INTEGER" />
    <result column="strUserAuthorizationAbbr" property="struserauthorizationabbr" jdbcType="VARCHAR" />
    <result column="strUserAuthorizationName" property="struserauthorizationname" jdbcType="VARCHAR" />
    <result column="intUserAuthorizationValue" property="intuserauthorizationvalue" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    intId, intUserAuthorizationId, strUserAuthorizationAbbr, strUserAuthorizationName, 
    intUserAuthorizationValue
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from l4_userauthorization
    where intId = #{intid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from l4_userauthorization
    where intId = #{intid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jcos.lc4e.core.database.model.UserAuthorization" >
    insert into l4_userauthorization (intId, intUserAuthorizationId, strUserAuthorizationAbbr, 
      strUserAuthorizationName, intUserAuthorizationValue
      )
    values (#{intid,jdbcType=INTEGER}, #{intuserauthorizationid,jdbcType=INTEGER}, #{struserauthorizationabbr,jdbcType=VARCHAR}, 
      #{struserauthorizationname,jdbcType=VARCHAR}, #{intuserauthorizationvalue,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jcos.lc4e.core.database.model.UserAuthorization" >
    insert into l4_userauthorization
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="intid != null" >
        intId,
      </if>
      <if test="intuserauthorizationid != null" >
        intUserAuthorizationId,
      </if>
      <if test="struserauthorizationabbr != null" >
        strUserAuthorizationAbbr,
      </if>
      <if test="struserauthorizationname != null" >
        strUserAuthorizationName,
      </if>
      <if test="intuserauthorizationvalue != null" >
        intUserAuthorizationValue,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="intid != null" >
        #{intid,jdbcType=INTEGER},
      </if>
      <if test="intuserauthorizationid != null" >
        #{intuserauthorizationid,jdbcType=INTEGER},
      </if>
      <if test="struserauthorizationabbr != null" >
        #{struserauthorizationabbr,jdbcType=VARCHAR},
      </if>
      <if test="struserauthorizationname != null" >
        #{struserauthorizationname,jdbcType=VARCHAR},
      </if>
      <if test="intuserauthorizationvalue != null" >
        #{intuserauthorizationvalue,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcos.lc4e.core.database.model.UserAuthorization" >
    update l4_userauthorization
    <set >
      <if test="intuserauthorizationid != null" >
        intUserAuthorizationId = #{intuserauthorizationid,jdbcType=INTEGER},
      </if>
      <if test="struserauthorizationabbr != null" >
        strUserAuthorizationAbbr = #{struserauthorizationabbr,jdbcType=VARCHAR},
      </if>
      <if test="struserauthorizationname != null" >
        strUserAuthorizationName = #{struserauthorizationname,jdbcType=VARCHAR},
      </if>
      <if test="intuserauthorizationvalue != null" >
        intUserAuthorizationValue = #{intuserauthorizationvalue,jdbcType=VARCHAR},
      </if>
    </set>
    where intId = #{intid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcos.lc4e.core.database.model.UserAuthorization" >
    update l4_userauthorization
    set intUserAuthorizationId = #{intuserauthorizationid,jdbcType=INTEGER},
      strUserAuthorizationAbbr = #{struserauthorizationabbr,jdbcType=VARCHAR},
      strUserAuthorizationName = #{struserauthorizationname,jdbcType=VARCHAR},
      intUserAuthorizationValue = #{intuserauthorizationvalue,jdbcType=VARCHAR}
    where intId = #{intid,jdbcType=INTEGER}
  </update>
</mapper>